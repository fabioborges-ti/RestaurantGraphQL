// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RestaurantGraphQL.Infrastructure.Migrations
{
    [DbContext(typeof(GraphQLDbContext))]
    [Migration("20250903114959_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantGraphQL.Core.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Entradas"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Massas"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Carnes"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Peixes e Frutos do Mar"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Aves"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Saladas"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Sobremesas"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Bebidas"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Pratos Vegetarianos"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Menu Executivo"
                        });
                });

            modelBuilder.Entity("RestaurantGraphQL.Core.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Descricao = "Pão italiano tostado com tomate, manjericão fresco, alho e azeite extra virgem",
                            Nome = "Bruschetta Italiana",
                            Preco = 24.899999999999999
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Descricao = "Fatias finas de salmão fresco com alcaparras, rúcula e molho de mostarda",
                            Nome = "Carpaccio de Salmão",
                            Preco = 32.899999999999999
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            Descricao = "Seleção de queijos nacionais e importados com salamis artesanais e geleia",
                            Nome = "Tábua de Queijos e Embutidos",
                            Preco = 45.899999999999999
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            Descricao = "Massa italiana com bacon, ovos, queijo parmesão e pimenta do reino",
                            Nome = "Spaghetti à Carbonara",
                            Preco = 38.899999999999999
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 2,
                            Descricao = "Lasanha tradicional com molho bolonhesa, bechamel e queijo gratinado",
                            Nome = "Lasanha Bolonhesa",
                            Preco = 42.899999999999999
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            Descricao = "Massa fettuccine com molho cremoso de queijo parmesão e manteiga",
                            Nome = "Fettuccine Alfredo",
                            Preco = 36.899999999999999
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 2,
                            Descricao = "Risotto cremoso com camarões frescos, alho-poró e vinho branco",
                            Nome = "Risotto de Camarão",
                            Preco = 54.899999999999999
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 3,
                            Descricao = "Picanha nobre grelhada com farofa de banana, vinagrete e mandioca",
                            Nome = "Picanha Grelhada",
                            Preco = 67.900000000000006
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 3,
                            Descricao = "Corte especial de bife ancho com batatas rústicas e molho chimichurri",
                            Nome = "Bife Ancho Premium",
                            Preco = 72.900000000000006
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 3,
                            Descricao = "Costela bovina assada lentamente com molho barbecue especial da casa",
                            Nome = "Costela BBQ",
                            Preco = 58.899999999999999
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 4,
                            Descricao = "Filé de salmão grelhado com legumes salteados e molho de ervas finas",
                            Nome = "Salmão Grelhado",
                            Preco = 64.900000000000006
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 4,
                            Descricao = "Camarões refogados no leite de coco com dendê, pimentões e coentro",
                            Nome = "Moqueca de Camarão",
                            Preco = 59.899999999999999
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 4,
                            Descricao = "Bacalhau desfiado com batatas, ovos, cebola e azeitonas portuguesas",
                            Nome = "Bacalhau à Gomes de Sá",
                            Preco = 68.900000000000006
                        },
                        new
                        {
                            Id = 14,
                            CategoriaId = 5,
                            Descricao = "Peito de frango empanado com molho de tomate e queijo gratinado",
                            Nome = "Frango à Parmegiana",
                            Preco = 44.899999999999999
                        },
                        new
                        {
                            Id = 15,
                            CategoriaId = 5,
                            Descricao = "Pato confitado lentamente com purê de batata-doce e molho de laranja",
                            Nome = "Duck Confit",
                            Preco = 78.900000000000006
                        },
                        new
                        {
                            Id = 16,
                            CategoriaId = 6,
                            Descricao = "Mix de folhas verdes, croutons, parmesão e molho caesar tradicional",
                            Nome = "Salada Caesar",
                            Preco = 28.899999999999999
                        },
                        new
                        {
                            Id = 17,
                            CategoriaId = 6,
                            Descricao = "Camarões grelhados sobre mix de folhas, tomate cereja e molho de maracujá",
                            Nome = "Salada de Camarão",
                            Preco = 42.899999999999999
                        },
                        new
                        {
                            Id = 18,
                            CategoriaId = 7,
                            Descricao = "Sobremesa italiana com café espresso, mascarpone e cacau em pó",
                            Nome = "Tiramisù",
                            Preco = 22.899999999999999
                        },
                        new
                        {
                            Id = 19,
                            CategoriaId = 7,
                            Descricao = "Bolo quente de chocolate com sorvete de baunilha e calda de chocolate",
                            Nome = "Petit Gâteau",
                            Preco = 26.899999999999999
                        },
                        new
                        {
                            Id = 20,
                            CategoriaId = 7,
                            Descricao = "Cheesecake cremoso com calda de frutas vermelhas e biscoito de baunilha",
                            Nome = "Cheesecake de Frutas Vermelhas",
                            Preco = 24.899999999999999
                        },
                        new
                        {
                            Id = 21,
                            CategoriaId = 8,
                            Descricao = "Vinho tinto nacional reserva, safra especial com notas frutadas",
                            Nome = "Vinho Tinto Reserva",
                            Preco = 89.900000000000006
                        },
                        new
                        {
                            Id = 22,
                            CategoriaId = 8,
                            Descricao = "Cachaça artesanal com limão siciliano e açúcar demerara",
                            Nome = "Caipirinha Premium",
                            Preco = 18.899999999999999
                        },
                        new
                        {
                            Id = 23,
                            CategoriaId = 8,
                            Descricao = "Suco natural de frutas da estação sem conservantes",
                            Nome = "Suco Natural da Casa",
                            Preco = 12.9
                        },
                        new
                        {
                            Id = 24,
                            CategoriaId = 9,
                            Descricao = "Massa folhada com mix de legumes da estação e queijo de cabra",
                            Nome = "Quiche de Legumes",
                            Preco = 32.899999999999999
                        },
                        new
                        {
                            Id = 25,
                            CategoriaId = 9,
                            Descricao = "Bowl nutritivo com quinoa, grão-de-bico, abacate e molho tahine",
                            Nome = "Buddha Bowl",
                            Preco = 34.899999999999999
                        },
                        new
                        {
                            Id = 26,
                            CategoriaId = 10,
                            Descricao = "Peito de frango grelhado, arroz, feijão, batata e salada",
                            Nome = "Executivo - Frango Grelhado",
                            Preco = 26.899999999999999
                        },
                        new
                        {
                            Id = 27,
                            CategoriaId = 10,
                            Descricao = "Peixe grelhado do dia com legumes, arroz e purê de batatas",
                            Nome = "Executivo - Peixe do Dia",
                            Preco = 29.899999999999999
                        });
                });

            modelBuilder.Entity("RestaurantGraphQL.Core.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPessoas")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataHora = new DateTime(2025, 9, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "João Silva",
                            NumeroPessoas = 2,
                            Observacoes = "Mesa próxima à janela"
                        },
                        new
                        {
                            Id = 2,
                            DataHora = new DateTime(2025, 9, 16, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Maria Oliveira",
                            NumeroPessoas = 4,
                            Observacoes = "Aniversário, trazer bolo"
                        },
                        new
                        {
                            Id = 3,
                            DataHora = new DateTime(2025, 9, 17, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Carlos Pereira",
                            NumeroPessoas = 3,
                            Observacoes = "Preferência por mesa externa"
                        },
                        new
                        {
                            Id = 4,
                            DataHora = new DateTime(2025, 9, 18, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Fernanda Souza",
                            NumeroPessoas = 6,
                            Observacoes = "Mesa para grupo, perto do bar"
                        },
                        new
                        {
                            Id = 5,
                            DataHora = new DateTime(2025, 9, 19, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Ricardo Gomes",
                            NumeroPessoas = 2,
                            Observacoes = "Pedido de vinho antecipado"
                        },
                        new
                        {
                            Id = 6,
                            DataHora = new DateTime(2025, 9, 20, 20, 15, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Juliana Costa",
                            NumeroPessoas = 5,
                            Observacoes = "Cadeiras extras para crianças"
                        });
                });

            modelBuilder.Entity("RestaurantGraphQL.Core.Models.Menu", b =>
                {
                    b.HasOne("RestaurantGraphQL.Core.Models.Categoria", "Categoria")
                        .WithMany("Menus")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("RestaurantGraphQL.Core.Models.Categoria", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
